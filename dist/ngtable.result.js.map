{"version":3,"sources":["../src/ngtable.result.ts"],"names":[],"mappings":"AAIA;IAEE,6BAAsB,KAAiB,EAAY,UAAsB,EAAY,eAAqB;QAAvD,2BAAA,EAAA,cAAsB;QAAnD,UAAK,GAAL,KAAK,CAAY;QAAY,eAAU,GAAV,UAAU,CAAY;QAAY,oBAAe,GAAf,eAAe,CAAM;IAE1G,CAAC;IAED,sBAAI,qCAAI;aAAR;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;;;OAAA;IAED,sBAAI,0CAAS;aAAb;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;;;OAAA;IAED,sBAAI,+CAAc;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;QAC9B,CAAC;;;OAAA;IAEM,0BAAM,GAAb,UAAc,IAAgB,EAAE,SAAiB,EAAE,cAAoB;QACrE,MAAM,CAAC,IAAI,mBAAmB,CAAC,IAAI,EAAE,SAAS,EAAE,cAAc,CAAC,CAAC;IAClE,CAAC;IAEM,8BAAU,GAAjB,UAAkB,MAAqB,EAAE,IAAgB,EAAE,cAAoB;QAC7E,IAAI,IAAI,GAAe,EAAE,CAAC;QAC1B,IAAI,KAAK,GAAW,CAAC,CAAC;QACtB,IAAI,MAAM,GAAyB,MAAM,CAAC,MAAM,CAAC;QAEjD,IAAI,CAAC,OAAO,CAAC,UAAA,GAAG;YACd,EAAE,CAAC,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACnE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjB,CAAC;YACD,KAAK,EAAE,CAAC;QACV,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;IACpE,CAAC;IAEH,0BAAC;AAAD,CArCA,AAqCC,IAAA","file":"ngtable.result.js","sourceRoot":"","sourcesContent":["import {INgTableSourceParams} from './ngtable.params';\nimport {NgTableSource} from './ngtable.source';\n\n\nexport class NgTableSourceResult {\n\n  constructor(protected _data: Array<any>, protected _totalRows: number = 0, protected _additionalData?: any) {\n\n  }\n\n  get data(): Array<any> {\n    return this._data;\n  }\n\n  get totalRows(): number {\n    return this._totalRows;\n  }\n\n  get additionalData(): number {\n    return this._additionalData;\n  }\n\n  static create(rows: Array<any>, totalRows: number, additionalData?: any) {\n    return new NgTableSourceResult(rows, totalRows, additionalData);\n  }\n\n  static singlePage(source: NgTableSource, rows: Array<any>, additionalData?: any): NgTableSourceResult {\n    let list: Array<any> = [];\n    let index: number = 0;\n    let params: INgTableSourceParams = source.params;\n\n    rows.forEach(row => {\n      if (index >= params.offset && index < params.offset + source.range) {\n        list.push(row);\n      }\n      index++;\n    });\n\n    return new NgTableSourceResult(list, rows.length, additionalData);\n  }\n\n}\n"]}
{"version":3,"sources":["../src/ngtable.source.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,YAAY,EAAC,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAC,eAAe,EAAC,MAAM,SAAS,CAAC;AACxC,OAAO,EAAsD,wBAAwB,EAAC,MAAM,kBAAkB,CAAC;AAK/G;IAWE;QATU,WAAM,GAAW,IAAI,CAAC;QACtB,kBAAa,GAAkB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC/C,YAAO,GAAyB,IAAI,CAAC;QACvC,aAAQ,GAAY,KAAK,CAAC;QACf,kBAAa,GAAyC,IAAI,eAAe,CAAsB,IAAI,CAAC,CAAC;QACxG,iBAAY,GAA2C,IAAI,YAAY,EAA4B,CAAC;QACpG,kBAAa,GAA4C,IAAI,YAAY,EAA6B,CAAC;QACvG,iBAAY,GAA2C,IAAI,YAAY,EAA4B,CAAC;IAIpH,CAAC;IAED,sBAAI,kCAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAID,+BAAO,GAAP,UAAQ,MAA4B;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAES,kCAAU,GAApB,UAAqB,MAA2B;QAC9C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,wBAAwB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,sBAAI,qCAAU;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAI,iCAAM;aAAV;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAA2B;YACpC,IAAI,MAAM,GAAQ,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;YAEvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAErB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5B,CAAC;QACH,CAAC;;;OAVA;IAYD,sBAAI,gCAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;QAC3B,CAAC;aAED,UAAU,KAAa;YACrB,IAAI,MAAM,GAAQ,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC;YAEtC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAEpB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5B,CAAC;QACH,CAAC;;;OAVA;IAYD,sBAAI,uCAAY;aAAhB;YACE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aAED,UAAiB,OAAsB;YACrC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC;QAC/B,CAAC;;;OAJA;IAMH,oBAAC;AAAD,CAxEA,AAwEC,IAAA","file":"ngtable.source.js","sourceRoot":"","sourcesContent":["import {EventEmitter} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/Rx';\nimport {NgTableAfterConnectEvent, NgTableBeforeConnectEvent, NgTableSourceUpdateEvent} from './ngtable.events';\nimport {INgTableSourceParams} from './ngtable.params';\nimport {NgTableSourceResult} from './ngtable.result';\n\n\nexport abstract class NgTableSource {\n\n  protected _range: number = null;\n  protected _rangeOptions: Array<number> = [5, 10, 20, 50];\n  protected _params: INgTableSourceParams = null;\n  private _loading: boolean = false;\n  protected readonly _sourceUpdate: BehaviorSubject<NgTableSourceResult> = new BehaviorSubject<NgTableSourceResult>(null);\n  public readonly sourceUpdate: EventEmitter<NgTableSourceUpdateEvent> = new EventEmitter<NgTableSourceUpdateEvent>();\n  public readonly beforeConnect: EventEmitter<NgTableBeforeConnectEvent> = new EventEmitter<NgTableBeforeConnectEvent>();\n  public readonly afterConnect: EventEmitter<NgTableAfterConnectEvent> = new EventEmitter<NgTableAfterConnectEvent>();\n\n  constructor() {\n\n  }\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  protected abstract source(params: INgTableSourceParams): void;\n\n  getData(params: INgTableSourceParams): void {\n    this._loading = true;\n    this.source(params);\n  }\n\n  protected updateData(result: NgTableSourceResult) {\n    this._loading = false;\n    this._sourceUpdate.next(result);\n    this.sourceUpdate.emit(new NgTableSourceUpdateEvent(this, result));\n  }\n\n  get connection(): BehaviorSubject<NgTableSourceResult> {\n    return this._sourceUpdate;\n  }\n\n  get params(): INgTableSourceParams {\n    return this._params;\n  }\n\n  set params(value: INgTableSourceParams) {\n    let wasSet: any = this._params != null;\n\n    this._params = value;\n\n    if (!this._loading && wasSet) {\n      this.getData(this.params);\n    }\n  }\n\n  get range(): number {\n    return this._range || 10;\n  }\n\n  set range(value: number) {\n    let wasSet: any = this._range != null;\n\n    this._range = value;\n\n    if (!this._loading && wasSet) {\n      this.getData(this.params);\n    }\n  }\n\n  get rangeOptions(): Array<number> {\n    return this._rangeOptions;\n  }\n\n  set rangeOptions(options: Array<number>) {\n    this._rangeOptions = options;\n  }\n\n}\n"]}